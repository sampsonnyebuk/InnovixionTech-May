{"version":3,"sources":["context/ToastContext.js","components/Navbar.js","components/Layout.js","pages/Home.js","pages/Login.js","pages/Register.js","pages/CreateContact.js","components/Spinner.js","pages/AllContact.js","pages/EditContact.js","App.js","index.js"],"names":["ToastContext","createContext","ToastContextProvider","_ref","children","React","createElement","Provider","value","toast","ToastContainer","autoClose","Navbar","title","navigate","useNavigate","user","setUser","useContext","AuthContext","className","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Fragment","onClick","localStorage","clear","success","replace","Layout","navbar","Home","useEffect","name","href","role","Login","loginUser","credentials","setCredentials","useState","email","password","handleInputChange","event","target","onSubmit","preventDefault","error","htmlFor","aria-describedby","onChange","placeholder","required","Register","registerUser","confirmPassword","userData","undefined","class","for","CreateContact","userDetails","setUserDetails","address","phone","async","res","fetch","method","headers","Authorization","concat","getItem","body","JSON","stringify","result","json","console","Spinner","splash","style","width","height","AllContact","showModal","setShowModal","loading","setLoading","modalData","setModalData","contacts","setContacts","searchInput","setSearchInput","log","err","fetchData","length","newSearchUser","filter","contact","toLowerCase","includes","e","scope","map","key","_id","Modal","show","onHide","Header","closeButton","Title","Body","Footer","window","confirm","myContacts","deleteContact","EditContact","useParams","App","AuthContextProvider","Switch","Route","path","element","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.f447af8a.chunk.js","sourcesContent":["// import { createContext } from \"react\";\r\n// import React from 'react';\r\n\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// const ToastContext = createContext();\r\n\r\n// export const ToastContextProvider = ({ children }) => {\r\n//   return (\r\n//     <ToastContext.Provider value={{ toast }}>\r\n//       <ToastContainer autoClose={2000} />\r\n//       {children}\r\n//     </ToastContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ToastContext;\r\nimport React from 'react';\r\nimport { createContext } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ToastContext = createContext();\r\n\r\nexport const ToastContextProvider = ({ children }) => {\r\n  return (\r\n    <ToastContext.Provider value={{ toast }}>\r\n      <ToastContainer autoClose={2000} />\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastContext;\r\n","// import React from 'react';\r\n// import { useContext } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import AuthContext from \"../context/AuthContext\";\r\n// import ToastContext from \"../context/ToastContext\";\r\n\r\n// const Navbar = ({ title = \"CMS\" }) => {\r\n//   const navigate = useNavigate();\r\n//   const { user, setUser } = useContext(AuthContext);\r\n//   const { toast } = useContext(ToastContext);\r\n\r\n//   return (\r\n//     <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n//       <div className=\"container-fluid\">\r\n//         <Link to=\"/\">\r\n//           <a className=\"navbar-brand\">{title}</a>\r\n//         </Link>\r\n\r\n//         <button\r\n//           className=\"navbar-toggler\"\r\n//           type=\"button\"\r\n//           data-bs-toggle=\"collapse\"\r\n//           data-bs-target=\"#navbarColor01\"\r\n//           aria-controls=\"navbarColor01\"\r\n//           aria-expanded=\"false\"\r\n//           aria-label=\"Toggle navigation\"\r\n//         >\r\n//           <span className=\"navbar-toggler-icon\"></span>\r\n//         </button>\r\n\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n//           <ul className=\"navbar-nav ms-auto\">\r\n//             {user ? (\r\n//               <>\r\n//                 <li className=\"nav-item\">\r\n//                   <Link to=\"/mycontacts\">\r\n//                     <a className=\"nav-link\">All Contacts</a>\r\n//                   </Link>\r\n//                 </li>\r\n//                 <li className=\"nav-item\">\r\n//                   <Link to=\"/create\">\r\n//                     <a className=\"nav-link\">Create</a>\r\n//                   </Link>\r\n//                 </li>\r\n//                 <li\r\n//                   className=\"nav-item\"\r\n//                   onClick={() => {\r\n//                     setUser(null);\r\n//                     localStorage.clear();\r\n//                     toast.success(\"Logged out.\");\r\n//                     navigate(\"/login\", { replace: true });\r\n//                   }}\r\n//                 >\r\n//                   <button className=\"btn btn-danger\">Logout</button>\r\n//                 </li>\r\n//               </>\r\n//             ) : (\r\n//               <>\r\n//                 <li className=\"nav-item\">\r\n//                   <Link to=\"/login\">\r\n//                     <a className=\"nav-link\">Login</a>\r\n//                   </Link>\r\n//                 </li>\r\n//                 <li className=\"nav-item\">\r\n//                   <Link to=\"/register\">\r\n//                     <a className=\"nav-link\">Register</a>\r\n//                   </Link>\r\n//                 </li>\r\n//               </>\r\n//             )}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\nimport React, { useContext } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst Navbar = ({ title = \"CMS\" }) => {\r\n  const navigate = useNavigate();\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const { toast } = useContext(ToastContext);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\" className=\"navbar-brand\">{title}</Link>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarColor01\"\r\n          aria-controls=\"navbarColor01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            {user ? (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/mycontacts\" className=\"nav-link\">All Contacts</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/create\" className=\"nav-link\">Create</Link>\r\n                </li>\r\n                <li\r\n                  className=\"nav-item\"\r\n                  onClick={() => {\r\n                    setUser(null);\r\n                    localStorage.clear();\r\n                    toast.success(\"Logged out.\");\r\n                    navigate(\"/login\", { replace: true });\r\n                  }}\r\n                >\r\n                  <button className=\"btn btn-danger\">Logout</button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Layout = ({ navbar = true, children }) => {\r\n  return (\r\n    <>\r\n      {navbar && <Navbar />}\r\n      <div className=\"container mt-3\">{children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// import React, { useContext, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import AuthContext from \"../context/AuthContext\";\r\n\r\n// const Home = () => {\r\n//   const navigate = useNavigate();\r\n//   const { user } = useContext(AuthContext);\r\n//   useEffect(() => {\r\n//     !user && navigate(\"/login\", { replace: true });\r\n//   }, []);\r\n//   return (\r\n//     <>\r\n//       <div className=\"jumbotron\">\r\n//         <h1>Welcome {user ? user.name : null}</h1>\r\n//         <hr className=\"my-4\" />\r\n//         <a className=\"btn btn-info\" href=\"#\" role=\"button\">\r\n//           Add Contacts\r\n//         </a>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/login\", { replace: true });\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <h1>Welcome {user ? user.name : null}</h1>\r\n        <hr className=\"my-4\" />\r\n        <a\r\n          className=\"btn btn-info\"\r\n          href=\"/create\" // Provide a valid, navigable address as the href value\r\n          role=\"button\"\r\n        >\r\n          Add Contacts\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst Login = () => {\r\n  const { toast } = useContext(ToastContext);\r\n  const { loginUser } = useContext(AuthContext);\r\n\r\n  const [credentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!credentials.email || !credentials.password) {\r\n      toast.error(\"please enter all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    loginUser(credentials);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Login</h3>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"emailInput\" className=\"form-label mt-4\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"emailInput\"\r\n            aria-describedby=\"emailHelp\"\r\n            name=\"email\"\r\n            value={credentials.email}\r\n            onChange={handleInputChange}\r\n            placeholder=\"johndoe@example.com\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"passwordInput\" className=\"form-label mt-4\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"passwordInput\"\r\n            name=\"password\"\r\n            value={credentials.password}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary my-3\" />\r\n        <p>\r\n          Don't have an account ? <Link to=\"/register\">Create One</Link>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst Register = () => {\r\n  const { toast } = useContext(ToastContext);\r\n  const { registerUser } = useContext(AuthContext);\r\n\r\n  const [credentials, setCredentials] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      !credentials.email ||\r\n      !credentials.password ||\r\n      !credentials.confirmPassword\r\n    ) {\r\n      toast.error(\"please enter all the required fields!\");\r\n      return;\r\n    }\r\n\r\n    if (credentials.password !== credentials.confirmPassword) {\r\n      toast.error(\"password do not match!\");\r\n      return;\r\n    }\r\n\r\n    const userData = { ...credentials, confirmPassword: undefined };\r\n    registerUser(userData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Create your account</h3>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div class=\"form-group\">\r\n          <label for=\"nameInput\" class=\"form-label mt-4\">\r\n            Your Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"nameInput\"\r\n            name=\"name\"\r\n            value={credentials.name}\r\n            onChange={handleInputChange}\r\n            placeholder=\"John Doe\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"emailInput\" class=\"form-label mt-4\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            id=\"emailInput\"\r\n            aria-describedby=\"emailHelp\"\r\n            name=\"email\"\r\n            value={credentials.email}\r\n            onChange={handleInputChange}\r\n            placeholder=\"johndoe@example.com\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"passwordInput\" class=\"form-label mt-4\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"passwordInput\"\r\n            name=\"password\"\r\n            value={credentials.password}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\" class=\"form-label mt-4\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={credentials.confirmPassword}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n          className=\"btn btn-primary my-3\"\r\n        />\r\n        <p>\r\n          Already have an account ? <Link to=\"/login\">Login</Link>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","// import React, { useContext, useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import AuthContext from \"../context/AuthContext\";\r\n// import ToastContext from \"../context/ToastContext\";\r\n\r\n// const CreateContact = () => {\r\n//   const { user } = useContext(AuthContext);\r\n//   const { toast } = useContext(ToastContext);\r\n\r\n//   const [userDetails, setUserDetails] = useState({\r\n//     name: \"\",\r\n//     address: \"\",\r\n//     email: \"\",\r\n//     phone: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleInputChange = (event) => {\r\n//     const { name, value } = event.target;\r\n\r\n//     setUserDetails({ ...userDetails, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const res = await fetch(`http://localhost:8000/api/contact`, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//       },\r\n//       body: JSON.stringify(userDetails),\r\n//     });\r\n//     const result = await res.json();\r\n//     if (!result.error) {\r\n//       toast.success(`Created [${userDetails.name}] contact`);\r\n\r\n//       setUserDetails({ name: \"\", address: \"\", email: \"\", phone: \"\" });\r\n//     } else {\r\n//       toast.error(result.error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <h2>Create your contact</h2>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"nameInput\" className=\"form-label mt-4\">\r\n//             Name Of Person\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"nameInput\"\r\n//             name=\"name\"\r\n//             value={userDetails.name}\r\n//             onChange={handleInputChange}\r\n//             placeholder=\"John Doe\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"addressInput\" className=\"form-label mt-4\">\r\n//             Address Of Person\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"addressInput\"\r\n//             name=\"address\"\r\n//             value={userDetails.address}\r\n//             onChange={handleInputChange}\r\n//             placeholder=\"WalkStreet 05, California\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"emailInput\" className=\"form-label mt-4\">\r\n//             Email Of Person\r\n//           </label>\r\n//           <input\r\n//             type=\"email\"\r\n//             className=\"form-control\"\r\n//             id=\"emailInput\"\r\n//             name=\"email\"\r\n//             value={userDetails.email}\r\n//             onChange={handleInputChange}\r\n//             placeholder=\"johndoe@example.com\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"phoneInput\" className=\"form-label mt-4\">\r\n//             Phone Number Of Person\r\n//           </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"phoneInput\"\r\n//             name=\"phone\"\r\n//             value={userDetails.phone}\r\n//             onChange={handleInputChange}\r\n//             placeholder=\"+977 987654321\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <input\r\n//           type=\"submit\"\r\n//           value=\"Add Contact\"\r\n//           className=\"btn btn-info my-2\"\r\n//         />\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CreateContact;\r\nimport React, { useContext, useState } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst CreateContact = () => {\r\n  const { toast } = useContext(ToastContext);\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/contact`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify(userDetails),\r\n      });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        toast.success(`Created [${userDetails.name}] contact`);\r\n        setUserDetails({ name: \"\", address: \"\", email: \"\", phone: \"\" });\r\n      } else {\r\n        toast.error(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Create your contact</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nameInput\" className=\"form-label mt-4\">\r\n            Name Of Person\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"nameInput\"\r\n            name=\"name\"\r\n            value={userDetails.name}\r\n            onChange={handleInputChange}\r\n            placeholder=\"John Doe\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"addressInput\" className=\"form-label mt-4\">\r\n            Address Of Person\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"addressInput\"\r\n            name=\"address\"\r\n            value={userDetails.address}\r\n            onChange={handleInputChange}\r\n            placeholder=\"WalkStreet 05, California\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"emailInput\" className=\"form-label mt-4\">\r\n            Email Of Person\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"emailInput\"\r\n            name=\"email\"\r\n            value={userDetails.email}\r\n            onChange={handleInputChange}\r\n            placeholder=\"johndoe@example.com\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phoneInput\" className=\"form-label mt-4\">\r\n            Phone Number Of Person\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            className=\"form-control\"\r\n            id=\"phoneInput\"\r\n            name=\"phone\"\r\n            value={userDetails.phone}\r\n            onChange={handleInputChange}\r\n            placeholder=\"+977 987654321\"\r\n            required\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Add Contact\"\r\n          className=\"btn btn-info my-2\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateContact;\r\n","import React from 'react';\r\nconst Spinner = ({ splash = \"Loading...\" }) => {\r\n    return (\r\n      <div className=\"text-center mt-5\">\r\n        <div\r\n          className=\"spinner-border m-5\"\r\n          style={{ width: \"3rem\", height: \"3rem\" }}\r\n          role=\"status\"\r\n        >\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n        <h3>{splash}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Spinner;\r\n","// import React, { useContext, useEffect, useState } from \"react\";\r\n// import { Modal } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Spinner from \"../components/Spinner\";\r\n// import ToastContext from \"../context/ToastContext\";\r\n\r\n// const AllContact = () => {\r\n//   const { toast } = useContext(ToastContext);\r\n\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [modalData, setModalData] = useState({});\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n//   useEffect(async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const res = await fetch(`http://localhost:8000/api/mycontacts`, {\r\n//         method: \"GET\",\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await res.json();\r\n//       if (!result.error) {\r\n//         setContacts(result.contacts);\r\n//         setLoading(false);\r\n//       } else {\r\n//         console.log(result);\r\n//         setLoading(false);\r\n//       }\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   }, []);\r\n\r\n//   const deleteContact = async (id) => {\r\n//     if (window.confirm(\"are you sure you want to delete this contact ?\")) {\r\n//       try {\r\n//         const res = await fetch(`http://localhost:8000/api/delete/${id}`, {\r\n//           method: \"DELETE\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//           },\r\n//         });\r\n//         const result = await res.json();\r\n//         if (!result.error) {\r\n//           setContacts(result.myContacts);\r\n//           toast.success(\"Deleted contact\");\r\n//           setShowModal(false);\r\n//         } else {\r\n//           toast.error(result.error);\r\n//         }\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleSearchSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const newSearchUser = contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(searchInput.toLowerCase())\r\n//     );\r\n//     console.log(newSearchUser);\r\n//     setContacts(newSearchUser);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <h1>Your Contacts</h1>\r\n//         <a href=\"/mycontacts\" className=\"btn btn-danger my-2\">\r\n//           Reload Contact\r\n//         </a>\r\n//         <hr className=\"my-4\" />\r\n//         {loading ? (\r\n//           <Spinner splash=\"Loading Contacts...\" />\r\n//         ) : (\r\n//           <>\r\n//             {contacts.length == 0 ? (\r\n//               <h3>No contacts created yet</h3>\r\n//             ) : (\r\n//               <>\r\n//                 <form className=\"d-flex\" onSubmit={handleSearchSubmit}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"searchInput\"\r\n//                     id=\"searchInput\"\r\n//                     className=\"form-control my-2\"\r\n//                     placeholder=\"Search Contact\"\r\n//                     value={searchInput}\r\n//                     onChange={(e) => setSearchInput(e.target.value)}\r\n//                   />\r\n//                   <button type=\"submit\" className=\"btn btn-info mx-2\">\r\n//                     Search\r\n//                   </button>\r\n//                 </form>\r\n\r\n//                 <p>\r\n//                   Your Total Contacts: <strong>{contacts.length}</strong>\r\n//                 </p>\r\n//                 <table className=\"table table-hover\">\r\n//                   <thead>\r\n//                     <tr className=\"table-dark\">\r\n//                       <th scope=\"col\">Name</th>\r\n//                       <th scope=\"col\">Address</th>\r\n//                       <th scope=\"col\">Email</th>\r\n//                       <th scope=\"col\">Phone</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {contacts.map((contact) => (\r\n//                       <tr\r\n//                         key={contact._id}\r\n//                         onClick={() => {\r\n//                           setModalData({});\r\n//                           setModalData(contact);\r\n//                           setShowModal(true);\r\n//                         }}\r\n//                       >\r\n//                         <th scope=\"row\">{contact.name}</th>\r\n//                         <td>{contact.address}</td>\r\n//                         <td>{contact.email}</td>\r\n//                         <td>{contact.phone}</td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </>\r\n//             )}\r\n//           </>\r\n//         )}\r\n//       </div>\r\n\r\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>{modalData.name}</Modal.Title>\r\n//         </Modal.Header>\r\n\r\n//         <Modal.Body>\r\n//           <h3>{modalData.name}</h3>\r\n//           <p>\r\n//             <strong>Address</strong>: {modalData.address}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Email</strong>: {modalData.email}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Phone Number</strong>: {modalData.phone}\r\n//           </p>\r\n//         </Modal.Body>\r\n\r\n//         <Modal.Footer>\r\n//           <Link className=\"btn btn-info\" to={`/edit/${modalData._id}`}>\r\n//             Edit\r\n//           </Link>\r\n//           <button\r\n//             className=\"btn btn-danger\"\r\n//             onClick={() => deleteContact(modalData._id)}\r\n//           >\r\n//             Delete\r\n//           </button>\r\n//           <button\r\n//             className=\"btn btn-warning\"\r\n//             onClick={() => setShowModal(false)}\r\n//           >\r\n//             Close\r\n//           </button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AllContact;\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst AllContact = () => {\r\n  const { toast } = useContext(ToastContext);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalData, setModalData] = useState({});\r\n  const [contacts, setContacts] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(`http://localhost:8000/api/mycontacts`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const result = await res.json();\r\n        if (!result.error) {\r\n          setContacts(result.contacts);\r\n        } else {\r\n          console.log(result);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const deleteContact = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\r\n      try {\r\n        const res = await fetch(`http://localhost:8000/api/delete/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const result = await res.json();\r\n        if (!result.error) {\r\n          setContacts(result.myContacts);\r\n          toast.success(\"Deleted contact\");\r\n          setShowModal(false);\r\n        } else {\r\n          toast.error(result.error);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newSearchUser = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n    setContacts(newSearchUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Your Contacts</h1>\r\n        <Link to=\"/mycontacts\" className=\"btn btn-danger my-2\">\r\n          Reload Contact\r\n        </Link>\r\n        <hr className=\"my-4\" />\r\n        {loading ? (\r\n          <Spinner splash=\"Loading Contacts...\" />\r\n        ) : (\r\n          <>\r\n            {contacts.length === 0 ? (\r\n              <h3>No contacts created yet</h3>\r\n            ) : (\r\n              <>\r\n                <form className=\"d-flex\" onSubmit={handleSearchSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"searchInput\"\r\n                    id=\"searchInput\"\r\n                    className=\"form-control my-2\"\r\n                    placeholder=\"Search Contact\"\r\n                    value={searchInput}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-info mx-2\">\r\n                    Search\r\n                  </button>\r\n                </form>\r\n\r\n                <p>\r\n                  Your Total Contacts: <strong>{contacts.length}</strong>\r\n                </p>\r\n                <table className=\"table table-hover\">\r\n                  <thead>\r\n                    <tr className=\"table-dark\">\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Address</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {contacts.map((contact) => (\r\n                      <tr\r\n                        key={contact._id}\r\n                        onClick={() => {\r\n                          setModalData({});\r\n                          setModalData(contact);\r\n                          setShowModal(true);\r\n                        }}\r\n                      >\r\n                        <th scope=\"row\">{contact.name}</th>\r\n                        <td>{contact.address}</td>\r\n                        <td>{contact.email}</td>\r\n                        <td>{contact.phone}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalData.name}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h3>{modalData.name}</h3>\r\n          <p>\r\n            <strong>Address</strong>: {modalData.address}\r\n          </p>\r\n          <p>\r\n            <strong>Email</strong>: {modalData.email}\r\n          </p>\r\n          <p>\r\n            <strong>Phone Number</strong>: {modalData.phone}\r\n          </p>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Link className=\"btn btn-info\" to={`/edit/${modalData._id}`}>\r\n            Edit\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => deleteContact(modalData._id)}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className=\"btn btn-warning\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllContact;\r\n","// import React, { useContext, useEffect, useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import Spinner from \"../components/Spinner\";\r\n// import AuthContext from \"../context/AuthContext\";\r\n// import ToastContext from \"../context/ToastContext\";\r\n\r\n// const EditContact = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const { user } = useContext(AuthContext);\r\n//   const { toast } = useContext(ToastContext);\r\n\r\n//   const [userDetails, setUserDetails] = useState({\r\n//     name: \"\",\r\n//     address: \"\",\r\n//     email: \"\",\r\n//     phone: \"\",\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleInputChange = (event) => {\r\n//     const { name, value } = event.target;\r\n\r\n//     setUserDetails({ ...userDetails, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const res = await fetch(`http://localhost:8000/api/contact`, {\r\n//       method: \"PUT\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//       },\r\n//       body: JSON.stringify({ id, ...userDetails }),\r\n//     });\r\n//     const result = await res.json();\r\n//     if (!result.error) {\r\n//       toast.success(`updated [${userDetails.name}] contact`);\r\n\r\n//       setUserDetails({ name: \"\", address: \"\", email: \"\", phone: \"\" });\r\n//       navigate(\"/mycontacts\");\r\n//     } else {\r\n//       toast.error(result.error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const res = await fetch(`http://localhost:8000/api/contact/${id}`, {\r\n//         method: \"GET\",\r\n//         headers: {\r\n//           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//         },\r\n//       });\r\n//       const result = await res.json();\r\n//       setUserDetails({\r\n//         name: result.name,\r\n//         email: result.email,\r\n//         address: result.address,\r\n//         phone: result.phone,\r\n//       });\r\n//       setLoading(false);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       {loading ? (\r\n//         <Spinner splash=\"Loading Contact...\" />\r\n//       ) : (\r\n//         <>\r\n//           <h2>Edit your contact</h2>\r\n\r\n//           <form onSubmit={handleSubmit}>\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"nameInput\" className=\"form-label mt-4\">\r\n//                 Name Of Person\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 id=\"nameInput\"\r\n//                 name=\"name\"\r\n//                 value={userDetails.name}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"John Doe\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"addressInput\" className=\"form-label mt-4\">\r\n//                 Address Of Person\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//                 id=\"addressInput\"\r\n//                 name=\"address\"\r\n//                 value={userDetails.address}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"WalkStreet 05, California\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"emailInput\" className=\"form-label mt-4\">\r\n//                 Email Of Person\r\n//               </label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 className=\"form-control\"\r\n//                 id=\"emailInput\"\r\n//                 name=\"email\"\r\n//                 value={userDetails.email}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"johndoe@example.com\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"phoneInput\" className=\"form-label mt-4\">\r\n//                 Phone Number Of Person\r\n//               </label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//                 id=\"phoneInput\"\r\n//                 name=\"phone\"\r\n//                 value={userDetails.phone}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"+977 987654321\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <input\r\n//               type=\"submit\"\r\n//               value=\"Save Changes\"\r\n//               className=\"btn btn-info my-2\"\r\n//             />\r\n//           </form>\r\n//         </>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EditContact;\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport ToastContext from \"../context/ToastContext\";\r\n\r\nconst EditContact = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const { toast } = useContext(ToastContext);\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const res = await fetch(`http://localhost:8000/api/contact`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      body: JSON.stringify({ id, ...userDetails }),\r\n    });\r\n    const result = await res.json();\r\n    if (!result.error) {\r\n      toast.success(`Updated [${userDetails.name}] contact`);\r\n      setUserDetails({ name: \"\", address: \"\", email: \"\", phone: \"\" });\r\n      navigate(\"/mycontacts\");\r\n    } else {\r\n      toast.error(result.error);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/contact/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const result = await res.json();\r\n      setUserDetails({\r\n        name: result.name,\r\n        email: result.email,\r\n        address: result.address,\r\n        phone: result.phone,\r\n      });\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [id]); // Add id to the dependency array\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner splash=\"Loading Contact...\" />\r\n      ) : (\r\n        <>\r\n          <h2>Edit your contact</h2>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Input fields */}\r\n            <input type=\"submit\" value=\"Save Changes\" className=\"btn btn-info my-2\" />\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n","import React from 'react';\nimport { Routes as Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\nimport { ToastContextProvider } from \"./context/ToastContext\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport CreateContact from \"./pages/CreateContact\";\nimport AllContact from \"./pages/AllContact\";\nimport EditContact from \"./pages/EditContact\";\n\nconst App = () => {\n  return (\n    <ToastContextProvider>\n      <AuthContextProvider>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/create\" element={<CreateContact />} />\n            <Route path=\"/mycontacts\" element={<AllContact />} />\n            <Route path=\"/edit/:id\" element={<EditContact />} />\n          </Switch>\n        </Layout>\n      </AuthContextProvider>\n    </ToastContextProvider>\n  );\n};\n\nexport default App;\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\n// import { BrowserRouter } from \"react-router-dom\";\n\n// ReactDOM.render(\n//   <BrowserRouter>\n//     <App />\n//   </BrowserRouter>,\n//   document.getElementById(\"root\")\n// );\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}